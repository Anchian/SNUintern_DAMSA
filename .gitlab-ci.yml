# gitlab ci service
# https://cern.service-now.com/service-portal/article.do?n=KB0003690
# https://gitlab.cern.ch/help/ci/yaml/README.md

# --------- PIPELINE AND JOB DEFINITIONS ------
stages:
  - syntax-check
  - test
  - deploy

build-cc7:
  stage: test

  # use same OS as old lxplus7 (CC7)
  image: gitlab-registry.cern.ch/ci-tools/ci-worker:cc7

  tags:
  # Make your job be executed in a shared runner that has CVMFS mounted
  - cvmfs

  # prepare environment
  before_script:
    - yum -q -y install libX11 libX11-devel motif motif-devel mesa-libGL-devel mesa-libEGL-devel
    - source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc9-opt
    - cat /etc/redhat-release
    - g++ --version
    - cmake --version
    - root-config --version
    - root-config --features

  # build and test DMG4
  script:
    - ./runconfigure_lcg
    - make
    - make install

    - cd examples/example1
    - ./runconfigure
    - make
    - ./mkgeant4
    - cd ../..
    
    - cd examples/example11
    - ./runconfigure
    - make
    - source config.sh
    - ./mkgeant4 cardg_test.g4mac
    - cp Report.txt Report.txtSV
    - cd ../..

    # test DMG4 cross section stability
    - cd examples/testCS
    - ./runconfigure
    
    - sed -r 's#DM_TYPE_NAME#DarkPhotons#g' mkgeant4.cc.template > mkgeant4.cc
    - make
    - ./mkgeant4 > testDP.log

    - sed -r 's#DM_TYPE_NAME#DarkScalars#g' mkgeant4.cc.template > mkgeant4.cc
    - make
    - ./mkgeant4 > testSC.log
    
    - sed -r 's#DM_TYPE_NAME#DarkPseudoScalars#g' mkgeant4.cc.template > mkgeant4.cc
    - make
    - ./mkgeant4 > testPS.log
    
    - sed -r 's#DM_TYPE_NAME#DarkAxials#g' mkgeant4.cc.template > mkgeant4.cc
    - make
    - ./mkgeant4 > testAX.log
  artifacts:
    paths:
      - examples/testCS/testDP.log
      - examples/testCS/testSC.log
      - examples/testCS/testPS.log
      - examples/testCS/testAX.log
    expire_in: 1 week


build-el9:
  stage: test

  # use same OS as lxplus (EL9)
  image: gitlab-registry.cern.ch/linuxsupport/alma9-base:latest

  tags:
  # Make your job be executed in a shared runner that has CVMFS mounted
  - cvmfs

  # prepare environment
  before_script:
    - yum -q -y install libX11 libX11-devel motif motif-devel mesa-libGL-devel mesa-libEGL-devel libXpm libtirpc which make glibc-devel
    - source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_105 x86_64-el9-gcc12-opt
    - cat /etc/redhat-release
    - g++ --version
    - cmake --version
    - make --version
    - root-config --version
    - root-config --features

  # build and test DMG4
  script:
    - ./runconfigure_lcg
    - make
    - make install

    - cd examples/example1
    - ./runconfigure
    - make
    - ./mkgeant4
    - cd ../..
    
    - cd examples/example11
    - ./runconfigure
    - make
    - source config.sh
    - ./mkgeant4 cardg_test.g4mac
    - cp Report.txt Report.txtSV
    - cd ../..

    # test DMG4 cross section stability
    - cd examples/testCS
    - ./runconfigure
    
    - sed -r 's#DM_TYPE_NAME#DarkPhotons#g' mkgeant4.cc.template > mkgeant4.cc
    - make
    - ./mkgeant4 > testDP.log

    - sed -r 's#DM_TYPE_NAME#DarkScalars#g' mkgeant4.cc.template > mkgeant4.cc
    - make
    - ./mkgeant4 > testSC.log
    
    - sed -r 's#DM_TYPE_NAME#DarkPseudoScalars#g' mkgeant4.cc.template > mkgeant4.cc
    - make
    - ./mkgeant4 > testPS.log
    
    - sed -r 's#DM_TYPE_NAME#DarkAxials#g' mkgeant4.cc.template > mkgeant4.cc
    - make
    - ./mkgeant4 > testAX.log
  artifacts:
    paths:
      - examples/testCS/testDP.log
      - examples/testCS/testSC.log
      - examples/testCS/testPS.log
      - examples/testCS/testAX.log
    expire_in: 1 week


check-tabs:
  stage: syntax-check
  
  script:
    - cd src
    - echo "List of files with TAB char:"
    - echo '! grep -r -nP "\t" *' | bash
    - echo "List of files with CR char:"
    - grep -r -lP "\r" * || true
    - cd -
    - cd include
    - echo "List of files with TAB char:"
    - echo '! grep -r -nP "\t" *' | bash
    - echo "List of files with CR char:"
    - grep -r -lP "\r" * || true
    - cd -


test-simu:
  stage: deploy
  trigger: P348/na64-simulation
